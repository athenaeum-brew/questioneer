{
    "id": "09",
    "description": "Packages, Classpath, and JARs",
    "questions": [
      {
        "question": "What is the purpose of the classpath in Java?",
        "answers": [
          "To organize related classes",
          "To control access levels for classes",
          "To tell the JVM where to find compiled class files",
          "To package classes into a single file"
        ],
        "correct": [2]
      },
      {
        "question": "Which of the following can be included in the Java classpath?",
        "answers": [
          "Source code files (.java)",
          "JAR files",
          "Directories with compiled class files",
          "Directories with source code"
        ],
        "correct": [1, 2]
      },
      {
        "question": "Which are common causes of 'ClassNotFoundException' or 'NoClassDefFoundError' in Java?",
        "answers": [
          "The class is not in the classpath",
          "The JVM cannot find the class at runtime",
          "The class was deleted after compilation",
          "The class was loaded successfully at compile time"
        ],
        "correct": [0, 1]
      },
      {
        "question": "How do you manually set the classpath when running a Java program?",
        "answers": [
          "Using the 'import' statement",
          "Using the '-cp' or '-classpath' option",
          "Setting the 'CLASSPATH' environment variable",
          "Including it in the Java source code"
        ],
        "correct": [1, 2]
      },
      {
        "question": "Which of the following describes a Java package?",
        "answers": [
          "A way to organize related classes and interfaces",
          "A compressed file format to bundle multiple classes",
          "A namespace to avoid class name conflicts",
          "A setting to specify the JVM search paths"
        ],
        "correct": [0, 2]
      },
      {
        "question": "How do packages and classpath work together?",
        "answers": [
          "Each package corresponds to a directory structure, and the classpath tells Java where to find the classes",
          "Packages define the classpath for each class",
          "The classpath helps the JVM locate classes based on their package structure",
          "Packages and classpath are completely independent"
        ],
        "correct": [0, 2]
      },
      {
        "question": "What is a JAR file in Java?",
        "answers": [
          "A compressed file format that bundles multiple compiled classes and resources",
          "A utility to organize related classes and packages",
          "An archive that can be included in the classpath",
          "A tool to manage Java's runtime memory"
        ],
        "correct": [0, 2]
      },
      {
        "question": "Which of the following are correct about creating JAR files?",
        "answers": [
          "JAR files are created using the 'javac' command",
          "The 'jar' command is used to package compiled classes into a JAR file",
          "JAR files can be created by specifying the JAR name and the directory of compiled classes",
          "You can use the 'java' command to directly create JAR files"
        ],
        "correct": [1, 2]
      },
      {
        "question": "Which of the following can be included in the classpath when running a Java program?",
        "answers": [
          "Compiled class files",
          "JAR files",
          "Directories containing packages",
          "Executable files"
        ],
        "correct": [0, 1, 2]
      },
      {
        "question": "Which of the following are best practices for managing classpath?",
        "answers": [
          "Use the '-cp' option rather than setting the 'CLASSPATH' environment variable globally",
          "Include all available paths and JARs to avoid errors",
          "Organize compiled classes and JAR files into well-structured directories",
          "Avoid using JAR files to reduce classpath complexity"
        ],
        "correct": [0, 2]
      }
    ]
  }
  